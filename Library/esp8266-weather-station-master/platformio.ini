; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


; *********************************************************************************************************************
; 2021-06-13
;
; It is a pity PlatformIO does not support building such Arduino libraries locally out of the box. The current solution
; evolved out of a discussion at https://community.platformio.org/t/build-an-arduino-library-for-esp8266-locally/10656
; Occasionally the build fails because PIO somehow gets the dependency tree completely wrong. Running the build again
; usually fixes it. 
;
; The default configuration will build *all* examples but you can easily uncomment the envs you do not need if you are 
; working on just a single example.
; *********************************************************************************************************************

[platformio]
lib_dir = $PROJECT_DIR

[env]
extra_scripts = pre:adjust_src_dir.py
; https://github.com/platformio/platform-espressif8266/releases/tag/v3.2.0
platform = espressif8266@3.2.0
board = d1_mini
framework = arduino
upload_speed = 921600
board_build.f_cpu = 160000000L
lib_deps =  JsonStreamingParser
            thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.2.0

; comment the ones you do not need
[env:AerisForecastsDemo]
[env:AerisObservationDemo]
[env:AerisSunMoonDemo]
[env:AstronomyDemo]
[env:OpenWeatherMapCurrentDemo]
[env:OpenWeatherMapForecastDemo]
[env:OpenWeatherMapOneCallDemo]
[env:PlaneSpotterDemo]
[env:SunMoonCalcDemo]
[env:WeatherStationDemo]
[env:WorldClockDemo]
